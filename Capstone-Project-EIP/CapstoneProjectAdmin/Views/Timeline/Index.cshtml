
@{
    ViewBag.Title = "Index";
    String path = Request.Url.GetLeftPart(UriPartial.Authority) + Request.ApplicationPath;
    int eventId = ViewBag.EventId;
    int sessionId = 0;
    int[] listSessionsId = new int[Model.Count()];
    for (int i = 0; i < Model.Count(); i++)
    {
        listSessionsId[i] = Model.ElementAt(i).SessionID;
    }
    if (Model.Count() > 0)
    {
        sessionId = Model.FirstOrDefault().SessionID;
    }
}
@using HmsService.ViewModels
@model IEnumerable<SessionViewModel>

<div class="container">
    <div class="ibox float-e-margins">
        <div class="ibox-title">
            <div class="row">
                <h2 class="col-sm-10">Dòng Thời Gian</h2>
                <div class="col-sm-2">
                    <button class="btn btn-primary" type="submit" data-toggle="modal" data-target="#addSpeakerModal" style="margin-top:20px" @(Model.Count() == 0 ? "disabled" : "")>
                        <i class="fa fa-plus" style="margin-right:7px" aria-hidden="true"></i>Thêm
                    </button>
                </div>
            </div>
        </div>

        <div class="modal fade" id="addSpeakerModal" role="dialog">
            <div class="modal-dialog">

                <!-- Modal content-->
                <div class="modal-content">
                    <div class="modal-header">
                        <button type="button" class="close" data-dismiss="modal">&times;</button>
                        <h4 class="modal-title">Thêm Dòng Thời Gian</h4>
                    </div>
                    <div class="modal-body">
                        <form>
                            <div class="form-group">
                                <label class="col-sm-3 form-control-label">Tiêu Đề:</label>
                                <div class="col-sm-9 input-group">
                                    <div class="input-group-addon">
                                        <i class="fa fa-briefcase" aria-hidden="true"></i>
                                    </div>
                                    <input type="text" class="form-control" id="addTitle" placeholder="Nhập tiêu đề dòng thời gian">
                                </div>
                                <div class="div-title-error empty col-lg-offset-3 col-lg-9 div-name-error" style="margin-bottom:10px">
                                    <p style="color:red">Vui lòng nhập tiêu đề</p>
                                </div>
                            </div>
                            <div class="form-group">
                                <label class="col-sm-3 form-control-label">Chi Tiết:</label>
                                <div class="col-sm-9 input-group">
                                    <div class="input-group-addon">
                                        <i class="fa fa-info" aria-hidden="true"></i>
                                    </div>
                                    <input type="text" class="form-control" id="addTimelineDetail" placeholder="Nhập chi tiết dòng thời gian">
                                </div>
                                <div class="div-tldetail-error empty col-lg-offset-3 col-lg-9 div-name-error" style="margin-bottom:10px">
                                    <p style="color:red">Vui lòng nhập chi tiết</p>
                                </div>
                            </div>
                        </form>
                    </div>
                    <div class="modal-footer">
                        <button type="button" id="addTimeline" class="btn btn-primary" style="margin-top:5px" data-dismiss="modal">Thêm</button>
                        <button type="button" class="btn btn-default" data-dismiss="modal">Hủy</button>
                    </div>
                </div>

            </div>
        </div>

        <div class="ibox-content">
            <!-- Custom Tabs -->
            <div class="nav-tabs-custom">
                <ul class="nav nav-tabs">
                    @for (int i = 0; i < Model.Count(); i++)
                    {
                        <li class="@(i == 0 ? "active" : "")" onclick="InitDatatable(@(i), @Model.ElementAt(i).SessionID); ChangeTabIndex(@(i), @Model.ElementAt(i).SessionID)"><a href="#tab_@(i)" data-toggle="tab">@Html.Raw(Model.ElementAt(i).Name)</a></li>
                    }
                </ul>
                <div class="tab-content">
                    @for (int i = 0; i < Model.Count(); i++)
                    {
                        <div class="tab-pane @(i == 0 ? "active" : "")" id="tab_@(i)">
                            <table class="table table-hover table-bordered" id="tblTimelineSession@(i)">
                                <thead>
                                    <tr>
                                        <th>Tiêu Đề</th>
                                        <th>Chi Tiết</th>
                                        <th>Thời Gian</th>
                                        <th>Chức Năng</th>
                                    </tr>
                                </thead>
                            </table>
                        </div>
                    }
                    <!-- /.tab-pane -->
                </div>
                <!-- /.tab-content -->
            </div>

        </div>
    </div>
</div>

<!-----------------Edit Timeline Modal ---------------------->
<div id="modalUpdateTimeline" class="modal fade" role="dialog">
    <div class="modal-dialog modal-lg">

        <!-- Modal content-->
        <div class="modal-content">
            <div class="modal-header">
                <button type="button" class="close" data-dismiss="modal">&times;</button>
                <h4 class="modal-title">Chỉnh Sửa Dòng Thời Gian</h4>
            </div>
            <div class="modal-body">
                <div class="form-group">
                    <label class="col-sm-3 form-control-label">
                        Tiêu Đề<span class="required">*</span>
                    </label>
                    <div class="col-sm-9 input-group">
                        <div class="input-group-addon">
                            <i class="fa fa-briefcase" aria-hidden="true"></i>
                        </div>
                        <input id="timelineTitle" type="text" class="form-control" placeholder="Nhập tiêu đề dòng thời gian">
                    </div>
                </div>
                <div class="form-group">
                    <label class="col-sm-3 form-control-label">Chi Tiết</label>
                    <div class="col-sm-9 input-group">
                        <div class="input-group-addon">
                            <i class="fa fa-info" aria-hidden="true"></i>
                        </div>
                        <input id="editTimelineDetail" type="text" class="form-control" placeholder="Nhập chi tiết dòng thời gian">
                    </div>
                </div>
            </div>
            <div class="modal-footer">
                <button type="button" id="btn-update-timeline" class="btn btn-primary" data-dismiss="modal">Lưu</button>
                <button type="button" class="btn btn-default" data-dismiss="modal">Hủy</button>
            </div>
        </div>
    </div>
</div>

<input type="hidden" id="txtTimelineId" value="" />
<input type="hidden" id="tab-index" value="0" />
<input type="hidden" id="session-id" value="@(sessionId)" />

@section scripts{
    <script>
        var urlApi = '@path';

        $(document).ready(function () {
            var listSessions = @Html.Raw(Json.Encode(listSessionsId));
            if (listSessions.length > 0)
            {
                InitDatatable(0, listSessions[0]);
            }
            else
            {
                InitDatatable(0, 0);
            }


            //Add timeline
            $('#addTimeline').on('click', function () {
                $('.div-title-error').css('display', 'none');
                $('.div-tldetail-error').css('display', 'none');
                var isValid = true;
                var title = $('#addTitle').val();
                if (title.trim().length == 0) {
                    $('.div-title-error').css('display', 'block');
                    $('#addTimeline').attr('data-dismiss', null);
                    isValid = false;
                } if ($('#addTimelineDetail').val().trim().length == 0) {
                    $('.div-tldetail-error').css('display', 'block');
                    $('#addTimeline').attr('data-dismiss', null);
                    isValid = false
                }
                if (isValid) {
                    $('#addTimeline').attr('data-dismiss', 'modal');
                    $('.div-title-error').attr('display', 'none');
                    $('.div-tldetail-error').css('display', 'none');
                    var dt = new Date($.now());
                    var time = dt.getHours() + ":" + dt.getMinutes() + ":" + dt.getSeconds();
                    $.ajax({
                        url: urlApi + 'api/timeline/addTimeline',
                        method: 'POST',
                        data: {
                            SessionId: $('#session-id').val(),
                            TimelineTitle: $('#addTitle').val(),
                            TimelineDetail: $('#addTimelineDetail').val(),
                            StartTime: time,
                        },
                        success: function (data) {
                            reloadTable();
                            swal("Thành Công!", "Dòng thời gian đã được thêm thành công", "success");
                        },
                        error: function (data) {
                            console.log(data);
                        }
                    });
                }
                
            });

            //Save update timeline
            $('#btn-update-timeline').on('click', function () {
                $.ajax({
                    url: 'api/timeline/UpdateTimeline',
                    method: "POST",
                    data: {
                        TimelineId: $('#txtTimelineId').val(),
                        TimelineTitle: $('#timelineTitle').val(),
                        TimelineDetail: $('#editTimelineDetail').val()
                    },
                    success: function (data) {
                        swal("Thành Công!", "Dòng thời gian đã được cập nhật thành công", "success");
                        $('#tblTimeline').DataTable().ajax.reload();
                    },
                    error: function (data) {
                        console.log(data);
                    }
                });
            });
        });

        function deleteTimeline(id) {
            swal({
                title: "Bạn có chắc không?",
                text: "Bạn sẽ không thể phục hồi lại!",
                type: "warning",
                showCancelButton: true,
                confirmButtonClass: "btn-danger",
                confirmButtonText: "Xóa!",
                cancelButtonText: "Không!",
                closeOnConfirm: false
            },
                function () {
                    $.ajax({
                        url: urlApi + 'api/timeline/DeleteTimeline',
                        method: "POST",
                        data: {
                            TimelineId: id,
                        },
                        success: function (data) {
                            reloadTable();
                            swal("Xóa Thành Công!", "Dòng thời gian đã được xóa thành công", "success");
                        },
                        error: function (data) {
                            console.log(data);
                            swal("Lỗi", "Có gì đó không đúng", "error");
                        }
                    });
                });
        }

        function openModelUpdate(id, name, description) {
            $('#timelineTitle').val(name);
            $('#editTimelineDetail').val(description);
            $('#txtTimelineId').val(id);
        }

        function reloadTable() {
            var index = $('#tab-index').val();
            $('#tblTimelineSession' + index).DataTable().ajax.reload();
        }

        function InitDatatable(index, sessionId) {
            $('#tblTimelineSession' + index).DataTable({
                "bDestroy": true,
                "oLanguage": {
                    "sSearch": "Tìm kiếm",
                    "oPaginate": {
                        "sFirst": "Trang đầu",
                        "sLast": "Trang cuối",
                        "sNext": "Trang kế",
                        "sPrevious": "Trang trước"
                    },
                    "sInfoEmpty": "",
                    "sInfo": "Hiển thị từ dòng _START_ tới _END_ trong tổng số _TOTAL_ dòng",
                    "sZeroRecords": "Không có dữ liệu",
                    "sLengthMenu": "Hiển thị _MENU_ dòng"
                },
                ajax: {
                    url: urlApi + 'api/timeline/GetAllTimelineBySessionId/' + sessionId,
                    dataSrc: ""
                },
                columns: [
                    {
                        name: "Title",
                        render: function (data, type, row) {
                            return row.timelineTitle;
                        }
                    },

                    {
                        name: "Detail",
                        render: function (data, type, row) {
                            return row.timelineDetail;
                        }
                    },
                    {
                        name: "startTime",
                        render: function (data, type, row) {
                            if (row.startTime.length > 0)
                            {
                                //return row.startTime.split(' ')[1].split(':')[0] + ':' + row.startTime.split(' ')[1].split(':')[1];
                                return row.startTime;
                            }
                            else
                            {
                                return row.startTime;
                            }
                        }
                    },
                    {
                        name: "Function",
                        render: function (data, type, row) {
                            return '<button class="btn btn-primary btn-sm" data-toggle="modal" data-target="#modalUpdateTimeline" onclick="openModelUpdate(' + row.timelineId + ',\'' + row.timelineTitle + '\',\'' + row.timelineDetail + '\')"><i class="fa fa-pencil"></i></button>     ' +
                                '<button class="btn btn-danger btn-sm btn-delete" onclick="deleteTimeline(' + row.timelineId + ')" id="btn-delete"><i class="fa fa-trash"></i></button>';
                        }
                    }
                ]
            });
        }

        function ChangeTabIndex(index,sessionId) {
            $('#tab-index').val(index);
            $('#session-id').val(sessionId);

        }
    </script>
}

