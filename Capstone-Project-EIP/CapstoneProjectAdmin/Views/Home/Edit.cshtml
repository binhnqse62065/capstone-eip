@using HmsService.ViewModels;
@model EventViewModel
@{
    /**/

    ViewBag.Title = "Edit";
    int eventId = ViewBag.EventId;
}

<div class="container">

    <div class="clearfix"></div>

    <div class="box">
        <div class="box-header d-flex align-items-center">
            <h2 class="h5 display">Chỉnh sửa thông tin sự kiện</h2>
        </div>

        <div class="box-body">
            @*<form class="form-horizontal">*@

            <div class="form-group">
                <label class="col-sm-3 form-control-label">Tên sự kiện:</label>
                <div class="col-sm-9 input-group">
                    <div class="input-group-addon">
                        <i class="fa fa-briefcase" aria-hidden="true"></i>
                    </div>
                    <input type="text" id="txtName" class="form-control" placeholder="Enter event's name" value="@(Model.Name)">
                </div>
            </div>

            <div class="form-group">
                <label class="col-sm-3 form-control-label">Mã đăng nhập:</label>
                <div class="col-sm-9 input-group">
                    <div class="input-group-addon">
                        <i class="fa fa-key" aria-hidden="true"></i>
                    </div>
                    <input type="text" id="txtLoginCode" class="form-control" placeholder="" value="@Html.Raw(Model.CodeLogin)">
                </div>
            </div>

            <div class="form-group">
                <label class="col-sm-3 form-control-label">Thời gian diễn ra sự kiện:</label>

                <div class="input-group col-sm-9">
                    <div class="input-group-addon">
                        <i class="fa fa-clock-o"></i>
                    </div>
                    <input type="text" class="form-control pull-right" id="txtStartEndTime" placeholder="" value="@Html.Raw(Model.StartTime) - @Html.Raw(Model.EndTime)">
                </div>
            </div>

            <div class="form-group">
                <label class="col-sm-3 form-control-label">Địa điểm:</label>
                <div class="col-sm-9 input-group">
                    <div class="input-group-addon">
                        <i class="fa fa-location-arrow" aria-hidden="true"></i>
                    </div>
                    <input type="text" id="txtAddress" class="form-control" placeholder="Vui lòng nhập địa chỉ" value="@Html.Raw(Model.Address)">
                    <input type="text" id="txtLng" class="form-control" placeholder="Vui lòng nhập kinh độ hoặc nhấn vào bản đồ để lấy" value="@(Model.Longitude)">
                    <input type="text" id="txtLat" class="form-control" placeholder="Vui lòng nhập vĩ độ hoặc nhấn vào bản đồ để lấy" value="@(Model.Latitude)">
                </div>
                <div id="map-canvas" style="width:100%; height:500px;"></div>
            </div>

            <div class="form-group">
                <label class="col-sm-3 form-control-label">Miêu tả:</label>
                <div class="col-sm-9 input-group">
                    <textarea id="txtDescription" name="editor1" rows="10" cols="80">
                        @Html.Raw(Model.EventDescription)
                    </textarea>
                </div>
            </div>

            
            <div class="form-group">
                <label class="col-sm-3 form-control-label">Được hiện lên trang giới thiệu:</label>

                <div class="col-sm-9 input-group">
                    @if ((bool)Model.IsLandingPage)
                    {
                        <input type="checkbox" checked id="ckIsLandingPage" disabled>
                    }
                    else
                    {
                        <input type="checkbox" id="ckIsLandingPage" disabled>
                    }

                </div>
            </div>

            <div class="form-group">
                <div class="row" style="padding:0 15px 0 15px">
                    <label class="col-lg-3 control-label">Hình đại diện</label>
                    <div class="col-lg-9" style="padding-left:0">
                        <div class="field">
                            <div class="control">
                                <button class="button" type="button" id="picker">Chọn file</button>
                                <input type="hidden" id="fileupload">
                            </div>
                        </div>
                        <div id="thumbnail-container">
                            <img id="txtBannerImage" src="@(Model.ImageURL)" class="img-responsive home-page-image" />
                        </div>
                    </div>
                </div>

            </div>

            <div class="line"></div>
            <div class="col-sm-8">
            </div>
            <div class="col-sm-4">
                <a class="btn btn-primary" id="btnUpdate"><i class="fa fa-pencil"></i> <span> Lưu</span></a>
                <a href="@Url.Action("Index","Home", new { id = eventId})" class="btn btn-danger"><i class="fa fa-arrow-left"></i> <span> Hủy</span></a>
            </div>

            @*</form>*@
        </div>
    </div>
</div>

<input type="hidden" value="@Model.EventID" id="event-id" />






@section scripts {
    <!--Google Map-->
    <script async defer
            src="https://maps.googleapis.com/maps/api/js?key=AIzaSyB7Meb98e_PppAWoqobk4Ml1rFygPl9eUI&callback=initMap">
    </script>
    <script>
        $(document).ready(function () {
            $('#btnUpdate').click(function () {
                var time = $('#txtStartEndTime').val();
                var timeSplit = time.split('-');
                var startTimeTmp = timeSplit[0].trim();
                var endTimeTmp = timeSplit[1].trim();

                var startTime = startTimeTmp.split("/").reverse().join("-");
                var endTime = endTimeTmp.split("/").reverse().join("-");

                $.ajax({
                    url: '@Url.Action("Update","Home")',
                    method: "POST",
                    data: {
                        EventID: $('#event-id').val(),
                        Name: $('#txtName').val(),
                        Address: $('#txtAddress').val(),
                        EventDescription: $('#txtDescription').val().trim(),
                        CodeLogin: $('#txtLoginCode').val(),
                        StartTime: startTime,
                        EndTime: endTime,
                        ImageURL: $('#txtBannerImage').val(),
                        Longitude: $('#txtLng').val(),
                        Latitude: $('#txtLat').val()

                    },
                    success: function (data) {
                        if (data.success) {
                            swal({
                                title: "Thành công!",
                                text: "Cập nhật thông tin sự kiện thành công",
                                type: "success",
                            }, function () {
                                window.location.href = "/Home/Index/" + data.eventId;
                                });
                        }
                    },
                    error: function (data) {
                        console.log(data);
                    }
                });
            });
            //Replace the <textarea id="editor1"> with a CKEditor
            //instance, using default configuration.
            CKEDITOR.replace('editor1');

            //Date range picker
            $('#txtStartEndTime').daterangepicker();





        });


        // Initialize and add the map
        function initMap() {
            var map;
            var myLatlng = { lat: 10.8528727, lng: 106.629381 };

            var myOptions = {
                zoom: 13,
                center: myLatlng,
                mapTypeId: google.maps.MapTypeId.ROADMAP
            }
            map = new google.maps.Map(document.getElementById("map-canvas"), myOptions);

            var marker = new google.maps.Marker({
                draggable: true,
                position: myLatlng,
                map: map,
                title: "Your location"
            });

            google.maps.event.addListener(map, 'click', function (event) {
                var lat = event.latLng.lat();
                var lgn = event.latLng.lng();
                //var split = latLgn.split(',');
                $('#txtLat').val(lat);
                $('#txtLng').val(lgn);
               
            });


        }

        //Filestack dùng để up hình
        // Set up the picker
        const client = filestack.init('AIA0Qk3iTSGzr9dIsuPdgz');
        const options = {
            onUploadDone: updateForm,
            maxSize: 10 * 1024 * 1024,
            accept: 'image/*',
            uploadInBackground: false,
            fromSources: ['local_file_system', 'imagesearch', 'facebook', 'instagram', 'dropbox', 'picasa', 'url']
        };
        const picker = client.picker(options);

        // Get references to the DOM elements

        const fileInput = document.getElementById('fileupload');
        const btn = document.getElementById('picker');
        const nameBox = document.getElementById('nameBox');
        const urlBox = document.getElementById('urlBox');

        // Add our event listeners

        btn.addEventListener('click', function (e) {
            e.preventDefault();
            picker.open();
        });



        // Helper to overwrite the field input value

        function updateForm(result) {
            const fileData = result.filesUploaded[0];
            fileInput.value = fileData.url;

            // If file is resizable image, resize and embed it as a thumbnail preview
            if (['jpeg', 'png'].indexOf(fileData.mimetype.split('/')[1]) !== -1) {
                if (fileInput.value != null) {
                    $('#txtBannerImage').attr('src', fileInput.value);
                }

                //const container = document.getElementById('thumbnail-container');
                //const thumbnail = document.getElementById('thumbnail') || new Image();
                //thumbnail.id = 'thumbnail';
                //thumbnail.src = client.transform(fileData.handle, {

                //});

                //if (!container.contains(thumbnail)) {
                //    container.appendChild(thumbnail);
                //}
            }
        };

    </script>
}


