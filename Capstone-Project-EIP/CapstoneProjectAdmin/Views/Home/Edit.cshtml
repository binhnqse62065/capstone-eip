@using HmsService.ViewModels;
@model EventViewModel
@{
    /**/

    ViewBag.Title = "Edit";
    int eventId = ViewBag.EventId;
    string briefName = ViewBag.BriefName != null ? ViewBag.BriefName : "";
}

<div class="container">

    <div class="clearfix"></div>

    <div class="box">
        <div class="box-header d-flex align-items-center">
            <h2 class="h5 display">Chỉnh sửa thông tin sự kiện</h2>
        </div>

        <div class="box-body">

            <div class="form-group">
                <label class="col-sm-3 form-control-label">Tên sự kiện:</label>
                <div class="col-sm-9 input-group">
                    <div class="input-group-addon">
                        <i class="fa fa-briefcase" aria-hidden="true"></i>
                    </div>
                    <input type="text" id="txtName" class="form-control" placeholder="Enter event's name" value="@(Model.Name)">
                </div>
                <p class="col-lg-offset-3 col-lg-9 error-title-edit-event" id="errorName">Vui lòng nhập tên sự kiện</p>
            </div>

            <div class="form-group">
                <label class="col-sm-3 form-control-label">Mã đăng nhập:</label>
                <div class="col-sm-9 input-group">
                    <div class="input-group-addon">
                        <i class="fa fa-key" aria-hidden="true"></i>
                    </div>
                    <input type="text" id="txtLoginCode" class="form-control" placeholder="" value="@Html.Raw(Model.CodeLogin)">
                </div>
                <p class="col-lg-offset-3 col-lg-9 error-title-edit-event" id="errorCodeLogin">Vui lòng nhập mã đăng nhập</p>
                <p class="col-lg-offset-3 col-lg-9 error-title-edit-event" id="errorCodeLoginFormat">Mã đăng nhập là số</p>
                <p class="col-lg-offset-3 col-lg-9 error-title-edit-event" id="errorCodeLoginExist">Mã đăng nhập đã tồn tại, vui lòng nhập mã khác</p>
            </div>

            <div class="form-group">
                <label class="col-sm-3 form-control-label">Thời gian diễn ra sự kiện:</label>

                <div class="input-group col-sm-9">
                    <div class="input-group-addon">
                        <i class="fa fa-clock-o"></i>
                    </div>
                    <input type="text" class="form-control pull-right" id="txtStartEndTime" placeholder="" value="@Html.Raw(Model.StartTime.Value.ToString("dd/MM/yyyy")) - @Html.Raw(Model.EndTime.Value.ToString("dd/MM/yyyy"))">
                </div>
            </div>

            <div class="form-group">
                <label class="col-sm-3 form-control-label">Địa điểm:</label>
                <div class="col-sm-9 input-group">
                    <div class="input-group-addon">
                        <i class="fa fa-location-arrow" aria-hidden="true"></i>
                    </div>
                    <input type="text" id="txtAddress" class="form-control" placeholder="Vui lòng nhập địa chỉ" value="@Html.Raw(Model.Address)">
                    <input type="text" id="txtLng" class="form-control" placeholder="Vui lòng nhập kinh độ hoặc nhấn vào bản đồ để lấy" value="@(Model.Longitude)">
                    <input type="text" id="txtLat" class="form-control" placeholder="Vui lòng nhập vĩ độ hoặc nhấn vào bản đồ để lấy" value="@(Model.Latitude)">
                </div>
                <div id="map-canvas" style="width:100%; height:500px;"></div>
                <p class="col-lg-offset-3 col-lg-9 error-title-edit-event" id="errorAddress">Vui lòng nhập địa điểm và chọn vị trí trên bản đồ</p>
            </div>

            <div class="form-group">
                <label class="col-sm-3 form-control-label">Miêu tả:</label>
                <div class="col-sm-9 input-group">
                    <textarea id="txtDescription" class="txtDescription" name="editor1" rows="10" cols="80">
                        @Html.Raw(Model.EventDescription)
                    </textarea>
                </div>
                <p class="col-lg-offset-3 col-lg-9 error-title-edit-event" id="errorDescription">Vui lòng nhập miêu tả</p>
            </div>


            <div class="form-group">
                <label class="col-sm-3 form-control-label">Được hiện lên trang giới thiệu:</label>

                <div class="col-sm-9 input-group">
                    @if ((bool)Model.IsLandingPage)
                    {
                        <input type="checkbox" checked id="ckIsLandingPage" disabled>
                    }
                    else
                    {
                        <input type="checkbox" id="ckIsLandingPage" disabled>
                    }

                </div>
            </div>
            <div class="form-group">
                <label class="col-sm-3 form-control-label">Đường dẫn:</label>

                <div class="col-sm-9 input-group">
                    <input type="text" class="form-control pull-right" id="txtBriefName" placeholder="Nhập tên đường dẫn" value="@(Model.BriefName)">
                    * Tên đường dẫn gồm chữ viết thường cách nhau bằng dấu "-"
                </div>
                <p class="col-lg-offset-3 col-lg-9 error-title-edit-event" id="errorBriefName">Vui lòng nhập đường dẫn sự kiện</p>
                <p class="col-lg-offset-3 col-lg-9 error-title-edit-event" id="errorBriefNameExist">Đường dẫn này đã tồn tại, vui lòng nhập đường dẫn khác</p>
            </div>

            <div class="form-group">
                <div class="row" style="padding:0 15px 0 15px">
                    <label class="col-lg-3 control-label">Hình đại diện</label>
                    <div class="col-lg-9" style="padding-left:0">
                        <div class="field">
                            <div class="control">
                                <button class="button" type="button" id="picker">Chọn file</button>
                                <input type="hidden" id="fileupload">
                            </div>
                        </div>
                        <div id="thumbnail-container">
                            <img id="txtBannerImage" src="@(Model.ImageURL)" class="img-responsive home-page-image" />
                        </div>
                    </div>
                    <p class="col-lg-offset-3 col-lg-9 error-title-edit-event" id="errorImage">Vui lòng chọn ảnh địa diện sự kiện</p>
                </div>

            </div>

            <div class="line"></div>
            <div class="col-sm-8">
            </div>
            <div class="col-sm-4">
                <a class="btn btn-primary" id="btnUpdate"><i class="fa fa-pencil"></i> <span> Lưu</span></a>
                <a href="@Url.Action("Index","Home", new { briefName = briefName })" class="btn btn-danger"><i class="fa fa-arrow-left"></i> <span> Hủy</span></a>
            </div>

            @*</form>*@
        </div>
    </div>
</div>

<input type="hidden" value="@Model.EventID" id="event-id" />






@section scripts {
    <!--Google Map-->
    <script async defer
            src="https://maps.googleapis.com/maps/api/js?key=AIzaSyBI3acHx7HKksgtOFzCXC7BULOxXcmS-AE&callback=initMap">
    </script>
    <script>
        $(document).ready(function () {
            $('#btnUpdate').click(function () {
                var time = $('#txtStartEndTime').val();
                var timeSplit = time.split('-');
                var startTimeTmp = timeSplit[0].trim();
                var endTimeTmp = timeSplit[1].trim();

                var startTime = startTimeTmp.split("/").reverse().join("-");
                var endTime = endTimeTmp.split("/").reverse().join("-");

                var name = $('#txtName').val();
                var address = $('#txtAddress').val();
                //var description = $('textarea.txtDescription').val();
                var description = CKEDITOR.instances.txtDescription.document.getBody().getHtml().toString();
                var imageUrl = $('#txtBannerImage').attr('src');
                var codeLogin = $('#txtLoginCode').val();
                var longitude = $('#txtLng').val();
                var lattitude = $('#txtLat').val();
                var briefName = $('#txtBriefName').val();

                var isValid = true;
                if (name.length === 0) {
                    isValid = false;
                    $('#errorName').css('display', 'block');
                }
                if (description.length === 0) {
                    isValid = false;
                    $('#errorDescription').css('display', 'block');
                }
                if (codeLogin.length === 0) {
                    isValid = false;
                    $('#errorCodeLogin').css('display', 'block');
                }
                else {
                    if (Math.floor(codeLogin) == codeLogin && $.isNumeric(codeLogin)) {

                    }
                    else {
                        isValid = false;
                        $('#errorCodeLoginFormat').css('display', 'block');
                    }
                }
                if (address.length === 0 || longitude.length === 0 || lattitude.length === 0) {
                    isValid = false;
                    $('#errorAddress').css('display', 'block');
                }
                if (briefName.length === 0) {
                    isValid = false;
                    $('#errorBriefName').css('display', 'block');
                }
                if (imageUrl.length === 0) {
                    isValid = false;
                    $('#errorImage').css('display', 'block');
                }
                briefName = change_alias(briefName);
                if (isValid) {
                    $.ajax({
                    url: '@Url.Action("Update","Home")',
                    method: "POST",
                    data: {
                        EventID: $('#event-id').val(),
                        Name: name,
                        Address: address,
                        EventDescription: description,
                        CodeLogin: codeLogin,
                        StartTime: startTime,
                        EndTime: endTime,
                        ImageURL: imageUrl,
                        Longitude: longitude,
                        Latitude: lattitude,
                        BriefName: briefName

                    },
                    success: function (data) {
                        clearError();
                        console.log(data);
                        if (data.success) {
                            swal({
                                title: "Thành công!",
                                text: "Cập nhật thông tin sự kiện thành công",
                                type: "success",
                            }, function () {
                                window.location.href = "/ManageHome/" + data.briefName;
                                });
                        }
                        else if (data.success === false) {
                            if (data.isBriefNameExist != null) {
                                $('#errorBriefNameExist').css('display', 'block');
                            }
                            if (data.isCodeLoginExist != null) {
                                $('#errorCodeLoginExist').css('display', 'block');
                            }
                        }
                    },
                    error: function (data) {
                        console.log(data);
                    }
                });
                }

                
            });
            //Replace the <textarea id="editor1"> with a CKEditor
            //instance, using default configuration.
            CKEDITOR.replace('editor1');

            //Date range picker
            $('#txtStartEndTime').daterangepicker({
                locale: {
                    format: 'DD/MM/YYYY'
                }
            });





        });


        // Initialize and add the map
        function initMap() {
            var map;
            var myLatlng = { lat: 10.8528727, lng: 106.629381 };

            var myOptions = {
                zoom: 13,
                center: myLatlng,
                mapTypeId: google.maps.MapTypeId.ROADMAP
            }
            map = new google.maps.Map(document.getElementById("map-canvas"), myOptions);

            var marker = new google.maps.Marker({
                draggable: true,
                position: myLatlng,
                map: map,
                title: "Your location"
            });

            google.maps.event.addListener(map, 'click', function (event) {
                var lat = event.latLng.lat();
                var lgn = event.latLng.lng();
                //var split = latLgn.split(',');
                $('#txtLat').val(lat);
                $('#txtLng').val(lgn);
                marker.setMap(null);
                var newPosition = { lat: lat, lng: lgn };
                marker = new google.maps.Marker({
                    draggable: true,
                    position: newPosition,
                    map: map,
                    title: "Your location"
                });
            });


        }

        //Filestack dùng để up hình
        // Set up the picker
        const client = filestack.init('A1Qbc4el1RCG9gRgLf4Zcz');
        const options = {
            onUploadDone: updateForm,
            maxSize: 10 * 1024 * 1024,
            accept: 'image/*',
            uploadInBackground: false,
            fromSources: ['local_file_system', 'imagesearch', 'facebook', 'instagram', 'dropbox', 'picasa', 'url']
        };
        const picker = client.picker(options);

        // Get references to the DOM elements

        const fileInput = document.getElementById('fileupload');
        const btn = document.getElementById('picker');
        const nameBox = document.getElementById('nameBox');
        const urlBox = document.getElementById('urlBox');

        // Add our event listeners

        btn.addEventListener('click', function (e) {
            e.preventDefault();
            picker.open();
        });



        // Helper to overwrite the field input value

        function updateForm(result) {
            const fileData = result.filesUploaded[0];
            fileInput.value = fileData.url;

            // If file is resizable image, resize and embed it as a thumbnail preview
            if (['jpeg', 'png'].indexOf(fileData.mimetype.split('/')[1]) !== -1) {
                if (fileInput.value != null) {
                    $('#txtBannerImage').attr('src', fileInput.value);
                }

                //const container = document.getElementById('thumbnail-container');
                //const thumbnail = document.getElementById('thumbnail') || new Image();
                //thumbnail.id = 'thumbnail';
                //thumbnail.src = client.transform(fileData.handle, {

                //});

                //if (!container.contains(thumbnail)) {
                //    container.appendChild(thumbnail);
                //}
            }
        };

        function clearError() {
            $('#errorName').css('display', 'none');
            $('#errorDescription').css('display', 'none');
            $('#errorCodeLogin').css('display', 'none');
            $('#errorAddress').css('display', 'none');
            $('#errorBriefName').css('display', 'none');
            $('#errorImage').css('display', 'none');
            $('#errorBriefNameExist').css('display', 'none');
            $('#errorCodeLoginExist').css('display', 'none');
            $('#errorCodeLoginFormat').css('display', 'none');
        }

    </script>
}


