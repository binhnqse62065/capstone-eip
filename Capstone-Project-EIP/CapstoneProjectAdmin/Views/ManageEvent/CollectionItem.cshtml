
@{
    ViewBag.Title = "Quản lý thành phần bộ sưu tập";
    Layout = "~/Views/Shared/_Layout.cshtml";
    string curPath = Request.Url.GetLeftPart(UriPartial.Authority) + Request.ApplicationPath;
    var eventId = Model.EventId;
    var typeId = Model.TypeId;
    bool isImage = (bool)Model.IsImage;
}
@using HmsService.Models.Entities;
@model EventCollection
<div class="container">
    <div class="ibox float-e-margins">
        <div class="ibox-title">
            <div class="row">
                <h2 class="col-sm-10">Quản lý @(Model.Name.ToLower())</h2>
                <div class="col-sm-2">
                    <button class="btn btn-custom" type="submit" data-toggle="modal" data-target="#collectionItemAddModal" style="margin-top:20px" onclick="clearModal()">
                        <i class="fa fa-plus" style="margin-right:7px" aria-hidden="true"></i>Thêm
                    </button>
                </div>
            </div>

        </div>

        <div class="ibox-content">
            <table class="table table-hover table-bordered" id="tblCollectionItem">
                <thead>
                    <tr>
                        <th>Tên</th>
                        <th>Miêu tả</th>
                        @if (isImage)
                        {
                            <th>Hình ảnh</th>
                        }
                        else
                        {

                            <th>Đường dẫn tập tin</th>
                        }
                        <th>Chức năng</th>
                    </tr>
                </thead>
            </table>
        </div>
    </div>
</div>

<!--Add Collection Item Modal-->
<div class="modal fade" id="collectionItemAddModal" role="dialog">
    <div class="modal-dialog">

        <!-- Modal content-->
        <div class="modal-content">
            <div class="modal-header">
                <button type="button" class="close" data-dismiss="modal">&times;</button>
                <h4 class="modal-title">Thêm thành phần bộ sưu tập</h4>
            </div>
            <div class="modal-body">
                <div class="form-group">
                    <label class="col-sm-3 form-control-label">Tên:</label>
                    <div class="col-sm-9 input-group">
                        <div class="input-group-addon">
                            <i class="fa fa-briefcase" aria-hidden="true"></i>
                        </div>

                        <input id="txtName" type="text" class="form-control speaker-title" placeholder="Nhập tên thành phần" @(typeId == 4 ? "readonly" : "")>
                    </div>
                    <p id="errorNameAdd" class="empty empty col-lg-offset-3">Vui lòng nhập tên thành phần</p>


                </div>
                <div class="form-group">
                    <label class="col-sm-3 form-control-label">Miêu Tả:</label>
                    <div class="col-sm-9 input-group">
                        <div class="input-group-addon">
                            <i class="fa fa-info" aria-hidden="true"></i>
                        </div>
                        <textarea id="txtDescription" type="text" class="form-control speaker-description" placeholder="Nhập miêu tả về thành phần"></textarea>
                    </div>
                    <p id="errorDesAdd" class="empty empty col-lg-offset-3">Vui lòng nhập miêu tả của thành phần</p>

                </div>
                <div class="form-group row">
                    <label class="col-sm-3 form-control-label">@(isImage ? "Tập tin:" : "Hình ảnh:")</label>
                    <div class="col-sm-9 row">
                        <div class="field">
                            <div class="control">
                                <button class="button" type="button" id="picker">Chọn file</button>
                                <input type="hidden" id="fileupload">
                            </div>
                        </div>
                        <div id="thumbnailContainer" class="speaker-img" style="margin-top:10px;">
                            <img class="img-responsive" />
                        </div>
                    </div>

                </div>
                
            </div>
            <div class="modal-footer">
                <button id="btnAdd" type="button" class="btn btn-primary speaker-id speaker-button" style="margin-top:5px">Thêm</button>
                <button type="button" class="btn btn-default" data-dismiss="modal">Hủy</button>
            </div>
        </div>

    </div>
</div>

<!--Edit Collection Item Modal-->
<div class="modal fade" id="collectionItemEditModal" role="dialog">
    <div class="modal-dialog">

        <!-- Modal content-->
        <div class="modal-content">
            <div class="modal-header">
                <button type="button" class="close" data-dismiss="modal">&times;</button>
                <h4 class="modal-title">Thêm thành phần bộ sưu tập</h4>
            </div>
            <div class="modal-body">
                <div class="form-group">
                    <label class="col-sm-3 form-control-label">Tên:</label>
                    <div class="col-sm-9 input-group">
                        <div class="input-group-addon">
                            <i class="fa fa-briefcase" aria-hidden="true"></i>
                        </div>
                        <input id="txtNameEdit" type="text" class="form-control speaker-title" placeholder="Nhập tên thành phần" @(typeId == 4 ? "readonly" : "")>
                    </div>
                    <p id="errorNameEdit" class="empty empty col-lg-offset-3">Vui lòng nhập tên thành phần</p>

                </div>
                <div class="form-group">
                    <label class="col-sm-3 form-control-label">Miêu Tả:</label>
                    <div class="col-sm-9 input-group">
                        <div class="input-group-addon">
                            <i class="fa fa-info" aria-hidden="true"></i>
                        </div>
                        <textarea id="txtDescriptionEdit" type="text" class="form-control speaker-description" placeholder="Nhập miêu tả về thành phần"></textarea>
                    </div>
                    <p id="errorDesEdit" class="empty empty col-lg-offset-3">Vui lòng nhập miêu tả của thành phần</p>

                </div>
                <div class="form-group row">
                    <label class="col-sm-3 form-control-label" style="padding-left: 30px;">Hình Ảnh:</label>
                    <div class="col-sm-9" style="padding-left: 7px;">
                        <div class="field">
                            <div class="control">
                                <button class="button" type="button" id="pickerEdit">Chọn file</button>
                                <input type="hidden" id="fileuploadEdit">
                            </div>
                        </div>
                        <div id="thumbnailContainerEdit" class="speaker-img">
                            <img class="img-responsive" id="imageUrlEdit" />
                        </div>
                    </div>

                </div>
            </div>
            <div class="modal-footer">
                <button id="btnEdit" type="button" class="btn btn-primary speaker-id speaker-button" data-target="#collectionItemEditModal" style="margin-top:5px">Thêm</button>
                <button type="button" class="btn btn-default" data-dismiss="modal">Hủy</button>
            </div>
        </div>

    </div>
</div>

<!--Event Id-->
<input type="hidden" value="@(Model.EventId)" id="eventId" />
<!--Event Collection Type-->
<input type="hidden" value="@(Model.TypeId)" id="eventCollectionType" />
<!--Event Id-->
<input type="hidden" value="@(Model.EventCollectionID)" id="eventCollectionId" />

@section scripts {
    <script>
        var eventId = parseInt($('#eventId').val());
        var typeId = parseInt($('#eventCollectionType').val());
        var eventCollectionId = parseInt($('#eventCollectionId').val());
        var urlApi = '@curPath';
        var isImage = '@(isImage)';
        $(document).ready(function () {
            $('#tblCollectionItem').DataTable({
                "oLanguage": {
                    "sSearch": "Tìm kiếm",
                    "oPaginate": {
                        "sFirst": "Trang đầu",
                        "sLast": "Trang cuối",
                        "sNext": "Trang kế",
                        "sPrevious": "Trang trước"
                    },
                    "sInfoEmpty": "",
                    "sInfo": "Hiển thị từ dòng _START_ tới _END_ trong tổng số _TOTAL_ dòng",
                    "sZeroRecords": "Không có dữ liệu",
                    "sLengthMenu": "Hiển thị _MENU_ dòng"
                },
                ajax: {
                    url: urlApi + "GetCollectionItem/" + eventCollectionId,
                    //dataSrc: ""
                },
                columns: [
                    {
                        name: "Name",
                        render: function (data, type, row) {
                            return row.Name;
                        }
                    },
                    {
                        name: "Description",
                        render: function (data, type, row) {
                            return row.Description;
                        }
                    },
                    {
                        name: "Image",
                        render: function (data, type, row) {
                            
                            if (row.ImageUrl != 'null') {
                                if (isImage === 'True') {
                                    return '<img src="' + row.ImageUrl + '" alt="brand" class="img-fluid" style="width:260px; height:200px;">';
                                }
                                else {
                                    return '<a href="' + row.ImageUrl + '">Tập tin</a>';
                                }
                            }
                            return "";

                        }
                    },
                    {
                        name: "Function",
                        render: function (data, type, row) {
                            return '<button class="btn btn-primary btn-sm" data-toggle="modal" data-target="#collectionItemEditModal" onclick="showModalSpeaker(' + row.CollectionItemID + ',\'' + row.Name + '\', \'' + row.Description + '\', \'' + row.ImageUrl + '\')"><i class="fa fa-pencil"></i></button>     ' +
                                '<button class="btn btn-danger btn-sm speaker-id" onclick="delCollectionItem(' + row.CollectionItemID + ')"><i class="fa fa-trash"></i></button>';
                        }
                    }
                ]
            });


            //Filestack dùng để up hình
            // Set up the picker
            const client = filestack.init('AdNHIzJfhTmey1CSdotUZz');
            const options = {
                onUploadDone: updateForm,
                maxSize: 10 * 1024 * 1024,
                //accept: 'image/*',
                uploadInBackground: false,
                fromSources: ['local_file_system', 'imagesearch', 'facebook', 'instagram', 'dropbox', 'picasa', 'url']
            };;

            const optionsEdit = {
                onUploadDone: updateFormEdit,
                maxSize: 10 * 1024 * 1024,
                //accept: 'image/*',
                uploadInBackground: false,
                fromSources: ['local_file_system', 'imagesearch', 'facebook', 'instagram', 'dropbox', 'picasa', 'url']
            };;
            
            const picker = client.picker(options);
            const pickerEdit = client.picker(optionsEdit);

            // Get references to the DOM elements

            const fileInput = document.getElementById('fileupload');
            const btn = document.getElementById('picker');

            const fileInputEdit = document.getElementById('fileuploadEdit');
            const btnEdit = document.getElementById('pickerEdit');

            // Add our event listeners

            btn.addEventListener('click', function (e) {
                e.preventDefault();
                picker.open();
            });

            btnEdit.addEventListener('click', function (e) {
                e.preventDefault();
                pickerEdit.open();
            });



            // Helper to overwrite the field input value

            function updateForm(result) {
                const fileData = result.filesUploaded[0];
                fileInput.value = fileData.url;

                var mimetype;
                if (isImage !== 'True') {
                    var nameSplit = fileData.filename.split('.');
                    mimetype = nameSplit[nameSplit.length - 1];
                }
                if (fileInput.value != null) {

                    if (isImage !== 'True') {
                        $('#thumbnailContainer').val(fileInput.value);
                        $('#txtName').val(fileData.filename);
                        renderIconFile(mimetype, fileData.filename, '#thumbnailContainer');
                    }
                    else {
                        $('#thumbnailContainer img').attr('src', fileInput.value);
                    }
                }
                // If file is resizable image, resize and embed it as a thumbnail preview
                if (['jpeg', 'png'].indexOf(fileData.mimetype.split('/')[1]) !== -1) {
                    $('#thumbnailContainer img').attr('src', fileInput.value);
                }
            }

            function updateFormEdit(result) {
                const fileData = result.filesUploaded[0];
                fileInput.value = fileData.url;

                var mimetype;
                if (isImage !== 'True') {
                    var nameSplit = fileData.filename.split('.');
                    mimetype = nameSplit[nameSplit.length - 1];
                }
                if (fileInput.value != null) {

                    if (isImage !== 'True') {
                        $('#thumbnailContainerEdit').val(fileInput.value);
                        $('#txtNameEdit').val(fileData.filename);
                        renderIconFile(mimetype, fileData.filename, '#thumbnailContainerEdit');
                    }
                    else {
                        $('#thumbnailContainerEdit img').attr('src', fileInput.value);
                    }
                }
                // If file is resizable image, resize and embed it as a thumbnail preview
                if (['jpeg', 'png'].indexOf(fileData.mimetype.split('/')[1]) !== -1) {
                    $('#thumbnailContainerEdit img').attr('src', fileInput.value);
                }
            }
        });

        $('#btnAdd').on('click', function () {
            clearErrorAddCollectionItem();

            var isValid = true;
            var name = $('#txtName').val();
            var description = $('#txtDescription').val();
            var imageUrl;
            if (isImage !== 'True') {
                imageUrl = $('#thumbnailContainer').val();
            }
            else {
                imageUrl = $('#thumbnailContainer img').attr('src');
            }
            
            if (name.trim().length == 0) {
                $('#errorNameAdd').css('display', 'block');
                isValid = false;
            }
            if (description.trim().length == 0) {
                $('#errorDesAdd').css('display', 'block');
                isValid = false;
            }
            if (isValid) {
                $.ajax({
                    url: '@Url.Action("AddNewCollectionItem", "ManageEvent")',
                    method: "POST",
                    data: {
                        Name: name,
                        Description: description,
                        ImageUrl: imageUrl,
                        EventCollectionId: eventCollectionId
                    },
                    success: function (data) {
                        reloadTable();
                        swal("Thành công!", "Bạn đã thêm thông tin thành phần thành công", "success");
                        clearModal();
                    },
                    error: function (data) {
                        console.log(data);
                    }
                });
                $('#collectionItemAddModal').modal('hide');
            }
        });

        $('#btnEdit').on('click', function () {
            clearErrorEditCollectionItem();

            var isValid = true;
            var collectionItemId = $(this).attr('value');
            var name = $('#txtNameEdit').val();
            var description = $('#txtDescriptionEdit').val();
            var imageUrl;
            if (isImage === 'True') {
                imageUrl = $('#thumbnailContainerEdit img').attr('src');
            }
            else {
                imageUrl = $('#thumbnailContainerEdit').val();
            }

            if (name.trim().length == 0) {
                $('#errorNameEdit').css('display', 'block');
                isValid = false;
            }
            if (description.trim().length == 0) {
                $('#errorDesEdit').css('display', 'block');
               
                isValid = false;
            }

            if (isValid) {
                
                $.ajax({
                    url: '@Url.Action("UpdateCollectionItem", "ManageEvent")',
                    method: "POST",
                    data: {
                        CollectionItemID: collectionItemId,
                        Name: name,
                        Description: description,
                        ImageUrl: imageUrl
                    },
                    success: function (data) {
                        reloadTable();
                        swal("Thành công!", "Bạn đã cập nhật thông tin thành phần thành công", "success");
                    },
                    error: function (data) {
                        console.log(data);
                    }
                });
                $('#collectionItemEditModal').modal('hide');
            }
        });


        function clearModal() {
            $('#txtName').val("");
            $('#txtDescription').val("");
            $('#thumbnailContainer').val("");
            //$('#thumbnailContainer').html("");
            $('#thumbnailContainer img').attr('src', '');
        }

        function checkURL(url) {
            return (url.match(/\.(jpeg|jpg|gif|png)$/) != null);
        }

        function showModalSpeaker(id, name, description, imageUrl) {
            $('#btnEdit').attr('value', id);
            $('#txtNameEdit').val(name);
            $('#txtDescriptionEdit').val(description);
            
            if (isImage !== 'True') {
                var nameSplit = name.split('.');
                var mimetype = nameSplit[nameSplit.length - 1];
                renderIconFile(mimetype, name, '#thumbnailContainerEdit');
            }
            else {
                $('#imageUrlEdit').attr('src', imageUrl);
            }
        }

        function delCollectionItem(collectionItemId) {
            swal({
                title: "Bạn có chắc?",
                text: "Bạn có chắc chắn, bạn sẽ không thể phục hồi lại!",
                type: "warning",
                showCancelButton: true,
                confirmButtonClass: "btn-danger",
                confirmButtonText: "Xóa!",
                cancelButtonText: "Hủy!",
                closeOnConfirm: false
            },
                function () {
                    $.ajax({
                        url: '@Url.Action("DeleteCollectionItem", "ManageEvent")',
                        method: "POST",
                        data: {
                            CollectionItemID: collectionItemId,

                        },
                        success: function (data) {
                            reloadTable();
                            swal("Xóa!", "Thành phần của bộ sưu tập đã được xóa thành công", "success");
                        },
                        error: function (data) {
                            console.log(data);
                            swal("Có lỗi", "Không thể xóa", "error");
                        }
                    });
                });

        }

        function reloadTable() {
            $('#tblCollectionItem').DataTable().ajax.reload();
        }

        function clearErrorAddCollectionItem() {
            $('#errorNameAdd').css('display', 'none');
            $('#errorDesAdd').css('display', 'none');
        }

        function clearErrorEditCollectionItem() {
            $('#errorNameEdit').css('display', 'none');
            $('#errorDesEdit').css('display', 'none');
        }


        function renderIconFile(mimetype, fileName, idDivRender) {
            if (['pdf'].indexOf(mimetype) !== -1) {
                $(idDivRender).html("<i class='fa fa-file-pdf-o fa-2x' style='padding-right: 10px;'></i>" + fileName);
            }
            if (['docx', 'doc'].indexOf(mimetype) !== -1) {
                $(idDivRender).html("<i class='fa fa-file-word-o fa-2x' style='padding-right: 10px;'></i>" + fileName);
            }
            if (['xlsx', 'xls'].indexOf(mimetype) !== -1) {
                $(idDivRender).html("<i class='fa fa-file-excel-o fa-2x' style='padding-right: 10px;'></i>" + fileName);
            }
            if (['avi', 'flv', 'wmv', 'mov', 'mp4'].indexOf(mimetype) !== -1) {
                $(idDivRender).html("<i class='fa fa-file-video-o fa-2x' style='padding-right: 10px;'></i>" + fileName);
            } 
            if (['mp3', 'flac', 'wma', 'wav', 'midi', 'ogg', 'ac3', 'amr', 'aac', 'm4a'].indexOf(mimetype) !== -1) {
                $(idDivRender).html("<i class='fa fa-file-audio-o fa-2x' style='padding-right: 10px;'></i>" + fileName);
            }
            if (['zip', 'rar', '7z'].indexOf(mimetype) !== -1) {
                $(idDivRender).html("<i class='fa fa-file-archive-o fa-2x' style='padding-right: 10px;'></i>" + fileName);
            }
            if (['txt', 'rtf'].indexOf(mimetype) !== -1) {
                $(idDivRender).html("<i class='fa fa-file-text-o fa-2x' style='padding-right: 10px;'></i>" + fileName);
            }
            if (['txt', 'rtf'].indexOf(mimetype) !== -1) {
                $(idDivRender).html("<i class='fa fa-file-text-o fa-2x' style='padding-right: 10px;'></i>" + fileName);
            }
            if (['ppt', 'pps', 'pptx', 'ppsx'].indexOf(mimetype) !== -1) {
                $(idDivRender).html("<i class='fa fa-file-powerpoint-o fa-2x' style='padding-right: 10px;'></i>" + fileName);
            }
            if (['jpeg', 'png'].indexOf(mimetype) !== -1) {
                $(idDivRender).html("<i class='fa fa-file-image-o fa-2x' style='padding-right: 10px;'></i>" + fileName);
            }
            else {
                $(idDivRender).html("<i class='fa fa-file-o fa-2x' style='padding-right: 10px;'></i>" + fileName);
            }
        }
    </script>
}