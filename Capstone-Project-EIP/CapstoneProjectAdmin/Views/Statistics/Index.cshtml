@using CapstoneProjectAdmin.ViewModel;
@{
    ViewBag.Title = "Thống kê";
    Layout = "~/Views/Shared/_Layout.cshtml";

    Random random = new Random();

    int eventId = ViewBag.EventId;
    int totalGuestArrived = ViewBag.TotalGuestArrived;
    int totalGuestRegister = ViewBag.TotalGuest;


    int totalQuestion = ViewBag.TotalQuestion;
    int totalComment = ViewBag.TotalComment;
    int totalQuestionLike = ViewBag.TotalQuestionLike;
    int totalCommentLike = ViewBag.TotalLikeComment;
    int totalQuestionHaveComment = ViewBag.TotalQuestionHaveComment;
    double percenQuestionHaveComment = 0;
    double percenQuestionDoesNotHaveComment = 0;
    if (totalQuestion != 0)
    {
        percenQuestionHaveComment = Math.Round(((double)totalQuestionHaveComment / totalQuestion) * 100);
        percenQuestionDoesNotHaveComment = 100 - percenQuestionHaveComment;
    }
    IEnumerable<QuestionViewModel> top3InterestedQuestion = ViewBag.Top3InterestedQuestion;


    int totalVoting = ViewBag.TotalVoting;
    int totalVotingRunned = ViewBag.TotalVotingRunned;
    int avarageVote = 0;
    if (totalVotingRunned != 0)
    {
        avarageVote = totalVoting / totalVotingRunned;
    }
    IEnumerable<HmsService.ViewModels.VotingViewModel> listVotingRunned = ViewBag.ListVotingRunned;


    int numberGuestCheckIn = ViewBag.NumberGuestCheckIn;
    int numberGuestRegisterBeforeEvent = ViewBag.NumberGuestRegisterBeforeEvent;


    //int totalGuestChart = numberGuestCheckIn + numberGuestRegisterBeforeEvent;
    double percentGuestCheckIn = 0;
    double percentGuestRegister = 0;
    if (numberGuestRegisterBeforeEvent != 0)
    {
        double percentTmp = (double)numberGuestCheckIn / numberGuestRegisterBeforeEvent;
        percentGuestCheckIn = Math.Round(percentTmp * 100);
        percentGuestRegister = 100 - percentGuestCheckIn;
    }

    //List QA ở select box câu hỏi được quan tâm
    IEnumerable<HmsService.ViewModels.QAViewModel> listQa = ViewBag.ListQA;

}

<section class="content-header">
    <h1>
        Thống kê chung
    </h1>

</section>

<section class="content content-custom">
    <div class="row">
        <div class="col-lg-4 col-xs-6">
            <!-- small box -->

            <div class="small-box bg-teal">
                <div class="inner inner-custom-2">
                    <h4>Người tham gia</h4>
                    <h5>Số lượng người đăng kí: @(totalGuestRegister)</h5>
                    <h5>Số lượng người tham gia: @(totalGuestArrived)</h5>
                </div>
                <div class="icon">
                    <i class="fa fa-user-circle-o"></i>
                </div>

            </div>


        </div>
        <div class="col-lg-4 col-xs-6">
            <!-- small box -->
            <div class="small-box bg-blue-gradient">
                <div class="inner inner-custom-2">
                    <h4>Câu hỏi</h4>
                    <h5>Số lượng câu hỏi/ bình luận: @(totalQuestion)/ @(totalComment)</h5>
                    <h5>Số lượt thích của câu hỏi/ bình luân: @(totalQuestionLike)/ @(totalCommentLike)</h5>
                </div>
                <div class="icon">
                    <i class="fa fa-question-circle-o"></i>
                </div>

            </div>
        </div>
        <div class="col-lg-4 col-xs-6">
            <!-- small box -->
            <div class="small-box bg-purple">
                <div class="inner inner-custom-2">
                    <h4>Bình chọn</h4>
                    <h5>Số lượng bình chọn tạo ra: @(totalVotingRunned)</h5>
                    <h5>Số lượng bình chọn trung bình: @(avarageVote)</h5>
                </div>
                <div class="icon">
                    <i class="fa fa-check-circle-o"></i>
                </div>

            </div>
        </div>


    </div>
</section>

<section class="content content-custom">
    <div class="row">
        <div class="col-lg-6">
            <div class="box box-primary">
                <div class="box-header with-border">
                    <i class="fa fa-bar-chart-o"></i>
                    <h3 class="box-title">Biểu đồ tỉ lệ người đăng kí(trước sự kiện) và tham gia</h3>
                    <div class="box-tools pull-right">
                        <button type="button" class="btn btn-box-tool" data-widget="collapse">
                            <i class="fa fa-minus"></i>
                        </button>
                    </div>
                </div>
                <div class="box-body">
                    <div>
                        <span class="user-join"></span>
                        <span>Số lượng tham gia</span>
                    </div>
                    <div>
                        <span class="user-not-join"></span>
                        <span>Số lượng không tham gia</span>
                    </div>
                    <div id="userRegistChart" style="height: 300px;"></div>
                </div>
                <!-- /.box-body-->
            </div>
            <!-- /.box -->
        </div>
        <div class="col-lg-6">
            <div class="box box-primary">
                <div class="box-header with-border">
                    <i class="fa fa-bar-chart-o"></i>
                    <h3 class="box-title">Biểu đồ tỉ lệ tương tác của câu hỏi</h3>
                    <div class="box-tools pull-right">
                        <button type="button" class="btn btn-box-tool" data-widget="collapse">
                            <i class="fa fa-minus"></i>
                        </button>
                    </div>
                </div>
                <div class="box-body">
                    <div>
                        <span class="user-join"></span>
                        <span>Số lượng câu hỏi có tương tác</span>
                    </div>
                    <div>
                        <span class="user-not-join"></span>
                        <span>Số lượng câu hỏi không tương tác</span>
                    </div>
                    <div id="questionChart" style="height: 300px;"></div>
                </div>
                <!-- /.box-body-->
            </div>
        </div>
    </div>
    <div class="row">
        <div class="col-lg-6">
            <!-- Chat box -->
            <div class="box box-success">
                <div class="box-header">
                    <i class="fa fa-comments-o"></i>
                    <h3 class="box-title">Những câu hỏi được quan tâm nhất</h3>
                    
                </div>
                <div class="box-body chat" >
                    <select class="form-control" style="margin-bottom:10px;" id="cbQaId">
                        @foreach(var qa in listQa)
                        {
                            <option value="@(qa.QAId)">@(qa.QAName)</option>
                        }
                    </select>
                    <div id="listQuestion">
                        @foreach (var question in top3InterestedQuestion)
                        {

                            <!-- chat item -->
                            <div class="item">
                                @{
                                    string[] userCommentSplit = question.Username.Split();
                                    char firstCharacterUserComment = userCommentSplit[userCommentSplit.Length - 1][0];
                                    var backgroundColor = String.Format("#{0:X6}", random.Next(0x1000000));
                                    <div class="logo-name" style="background-color:@(backgroundColor)">
                                        <span>@firstCharacterUserComment.ToString().ToUpper()</span>
                                    </div>
                                }
                                @*<img src="~/Content/AdminLTE-master/dist/img/user4-128x128.jpg" alt="user image" class="online">*@
                                <p class="message">
                                    <a class="name">
                                        <small class="text-muted pull-right"><i class="fa fa-clock-o"></i> @(question.CreateTime)</small>
                                        @(question.Username)
                                    </a>
                                    @(question.QuestionContent)
                                </p>


                            </div>
                            <!-- /.item -->
                        }
                    </div>
                    

                </div>
                <!-- /.chat -->

            </div>
            <!-- /.box (chat box) -->
        </div>
        <div class="col-lg-6">
            <!-- Chat box -->
            <div class="box box-success">
                <div class="box-header">
                    <i class="fa fa-check-circle-o"></i>
                    <h3 class="box-title">Kết quả bình chọn</h3>

                </div>
                <div class="box-body chat" id="chat-box">
                    <select class="form-control" id="cbVotingId">
                        @foreach (var voting in listVotingRunned)
                        {
                            <option value="@(voting.VotingId)">@(voting.VotingName)</option>
                        }
                    </select>
                    <div class="row">
                        <h4 class="text-center">Kết quả bình chọn</h4>
                    </div>
                    <div id="result-voting-section">

                    </div>
                </div>
                <!-- /.chat -->

            </div>
            <!-- /.box (chat box) -->
        </div>
    </div>


</section>

<div id="progress-bar-result-template" style="display:none;">
    <span></span>
    <div class="progress progress-striped">
        <div class="progress-bar progress-bar-success" role="progressbar" data-transitiongoal=""></div>
    </div>
</div>
<div id="listQuestionTemplate" style="display:none;"> 
    <div class="item">
     
            <div class="logo-name">
                <span></span>
            </div>

      
        <p class="message">
            <a class="name">
                <small class="text-muted pull-right"><i class="fa fa-clock-o"></i></small>
               
            </a>
           
        </p>


    </div>
</div>

@section scripts {
    <!-- FLOT CHARTS -->
    <script src="~/Content/AdminLTE-master/bower_components/Flot/jquery.flot.js"></script>
    <!-- FLOT RESIZE PLUGIN - allows the chart to redraw when the window is resized -->
    <script src="~/Content/AdminLTE-master/bower_components/Flot/jquery.flot.resize.js"></script>
    <!-- FLOT PIE PLUGIN - also used to draw donut charts -->
    <script src="~/Content/AdminLTE-master/bower_components/Flot/jquery.flot.pie.js"></script>
    <!-- FLOT CATEGORIES PLUGIN - Used to draw bar charts -->
    <script src="~/Content/AdminLTE-master/bower_components/Flot/jquery.flot.categories.js"></script>
    <script>
        var totalGuest = parseInt(@(numberGuestRegisterBeforeEvent));
        var totalQuestion = parseInt(@(totalQuestion));
        $(document).ready(function () {
            /*Guest Chart*/
            if (totalGuest != 0) {
                var donutData = [
                    { label: '', data: @(percentGuestRegister), color: '#e53935' },
                    { label: '', data: @(percentGuestCheckIn), color: '#43a047' }
                    


            ]
                $.plot('#userRegistChart', donutData, {
                series: {
                    pie: {
                        show: true,
                        radius: 1,
                        innerRadius: 0.5,
                        label: {
                            show: true,
                            radius: 2 / 3,
                            formatter: labelFormatter,
                            threshold: 0.1
                        }

                    }
                },
                legend: {
                    show: false
                }
            })
            }
            else {
                $('#userRegistChart').html('<h3>Chưa có dữ liệu để thống kê</h3>');
            }

            /*Question Chart*/
            if (totalQuestion != 0) {
                var donutData = [
                    { label: '', data: @(percenQuestionDoesNotHaveComment), color: '#e53935' },
                    { label: '', data: @(percenQuestionHaveComment), color: '#43a047' }
                    

            ]
                $.plot('#questionChart', donutData, {
                series: {
                    pie: {
                        show: true,
                        radius: 1,
                        innerRadius: 0.5,
                        label: {
                            show: true,
                            radius: 2 / 3,
                            formatter: labelFormatter,
                            threshold: 0.1
                        }

                    }
                },
                legend: {
                    show: false
                }
            })
            }
            else {
                $('#questionChart').html('<h3>Chưa có dữ liệu để thống kê</h3>');
            }


            /*Chạy kết quả result*/
            var votingIdInit = $('#cbVotingId').val();
            changeResultVoting(votingIdInit);
        });

        /*
        * Custom Label formatter
        * ----------------------
        */

        /*Thay đổi select box qa thì thay đổi các kết quả ở dưới*/
        $('#cbVotingId').on('change', function () {
            var votingId = this.value;
            $('#result-voting-section').empty();
            changeResultVoting(votingId);
        });

        /*Thay đổi select box voting thì thay đổi các kết quả ở dưới*/
        $('#cbQaId').on('change', function () {
            var qaId = this.value;
            console.log(qaId);
            $('#listQuestion').empty();
            changeTop3Question(qaId);
        });

        function labelFormatter(label, series) {
            return '<div style="font-size:13px; text-align:center; padding:2px; color: #fff; font-weight: 600;">'
                + label
                + '<br>'
                + Math.round(series.percent) + '%</div>'
        }

        function changeResultVoting(votingId) {

            $.ajax({
                url: '@Url.Action("GetVotingResult", "Statistics")',
                method: "POST",
                data: {
                    VotingId: votingId
                },
                success: function (data) {
                    if (data.success) {
                        var resultTemplate = $('#progress-bar-result-template').clone();
                        for (var i = 0; i < data.data.length; i++) {
                            resultTemplate.find('.progress-bar').attr('data-transitiongoal', data.data[i].PercentVote);
                            resultTemplate.find('span').text(data.data[i].VotingName);
                            $('#result-voting-section').append(resultTemplate.html());
                        }
                        $('.progress .progress-bar').progressbar({ display_text: 'center', percent_format: function (p) { return p + '%'; } });
                    }
                    else {
                        $('#result-voting-section').html('<h4class="text-center">Có lỗi xảy ra</h4>');
                    }

                },
                error: function (data) {
                    console.log(data);
                }
            });
        }

        function changeTop3Question(qaId) {

            $.ajax({
                url: '@Url.Action("GetTop3QuestionByQaId", "Statistics")',
                method: "POST",
                data: {
                    QAId: qaId
                },
                success: function (data) {
                    if (data.success) {
                        $('#listQuestion').empty();
                        var template = $('#listQuestionTemplate').clone();
                        var usernamePostQuestionSplit; 
                        var firstCharacterName;
                        for (var i = 0; i < data.data.length; i++) {
                            usernamePostQuestionSplit = data.data[i].Username.split(' ');
                            firstCharacterName = usernamePostQuestionSplit[usernamePostQuestionSplit.length - 1][0];
                            template.find('.logo-name span').html(firstCharacterName.toUpperCase());
                            template.find('.logo-name').css('background-color', getRandomColor());
                            //template.find('.message').text(data.data[i].QuestionContent);
                            //template.find('.text-muted').text(data.data[i].CreateTime);
                            //template.find('.name').text(data.data[i].Username);
                            template.find('.message').html('<a class="name"><small class="text-muted pull-right"><i class="fa fa-clock-o"></i> ' + data.data[i].CreateTime + '</small>' + data.data[i].Username + '</a>' + data.data[i].QuestionContent);
                            $('#listQuestion').append(template.html());
                        }
                    }
                    else {
                        $('#listQuestion').append('<h4class="text-center">Có lỗi xảy ra</h4>');
                    }

                },
                error: function (data) {
                    console.log(data);
                }
            });
        }


        /*Random màu cho các ô tên*/
        function getRandomColor() {
            var letters = '0123456789ABCDEF';
            var color = '#';
            for (var i = 0; i < 6; i++) {
                color += letters[Math.floor(Math.random() * 16)];
            }
            return color;
        }
    </script>
}